name: CI & Deploy

on:
    pull_request:
        paths:
            - "frontend/**"
            - ".github/**"
    push:
        branches: [main]
        paths:
            - "frontend/**"
            - ".github/**"

permissions:
    contents: read
    pull-requests: write
    issues: write

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    ci:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: frontend
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: npm
                  cache-dependency-path: frontend/package-lock.json
            - name: Install
              run: npm ci
            - name: Lint
              run: npm run lint --if-present
            - name: Typecheck
              run: npm run typecheck --if-present
            - name: Test
              run: npm test --if-present -- --ci
            - name: Build (vite)
              run: npm run build

    preview:
        if: github.event_name == 'pull_request'
        needs: ci
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: frontend
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: npm
                  cache-dependency-path: frontend/package-lock.json
            - name: Install
              run: npm ci
            - name: Write Vercel project.json
              run: |
                  mkdir -p .vercel
                  cat > .vercel/project.json << 'EOF'
                  { "projectId": "${{ secrets.VERCEL_PROJECT_ID }}", "orgId": "${{ secrets.VERCEL_ORG_ID }}" }
                  EOF

            - name: Build locally for Preview (Output v3)
              env:
                  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
              run: npx vercel build --yes --token "$VERCEL_TOKEN"
            - name: Deploy Preview (prebuilt)
              id: vercel
              env:
                  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
              run: |
                  URL=$(npx vercel deploy --prebuilt --yes --token "$VERCEL_TOKEN")
                  echo "url=$URL" >> $GITHUB_OUTPUT
                  echo "### Preview URL" >> $GITHUB_STEP_SUMMARY
                  echo "$URL" >> $GITHUB_STEP_SUMMARY
            - name: Comment preview URL on PR
              if: github.event.pull_request.head.repo.fork == false
              uses: actions/github-script@v7
              with:
                  script: |
                      const url = "${{ steps.vercel.outputs.url }}";
                      if (url) {
                        await github.rest.issues.createComment({
                          issue_number: context.issue.number,
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          body: `Preview deployed: ${url}`
                        });
                      }

    production:
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        needs: ci
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: frontend
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: npm
                  cache-dependency-path: frontend/package-lock.json
            - name: Install
              run: npm ci
            - name: Write Vercel project.json
              run: |
                  mkdir -p .vercel
                  cat > .vercel/project.json << 'EOF'
                  { "projectId": "${{ secrets.VERCEL_PROJECT_ID }}", "orgId": "${{ secrets.VERCEL_ORG_ID }}" }
                  EOF
            - name: Build locally for Production (Output v3)
              env:
                  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
              run: npx vercel build --prod --yes --token "$VERCEL_TOKEN"
            - name: Deploy Production (prebuilt)
              env:
                  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
              run: npx vercel deploy --prebuilt --prod --yes --token "$VERCEL_TOKEN"

// schema.prisma
generator client {
  provider = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
  directUrl = env("SB_CONNECT")
  schemas   = ["public", "ctrl-Y"]
}

//model書く時一番下に"  @@schema("ctrl-Y")  "追加でスキーマを指定
//その一つ上にテーブル指定
model Task {
  task_id    Int      @id @default(autoincrement())
  t_name       String   @db.Text
  memo       String?  @db.Text
  reward     Int      @db.SmallInt
  deadline   DateTime @db.Timestamptz
  s_id       Int      @db.SmallInt
  parent_id  String?  @db.Uuid

  parent     User?       @relation(fields: [parent_id], references: [user_id])
  status     TaskStatus  @relation(fields: [s_id], references: [s_id])
  childTasks ChildTask[]

  @@map("tasks") 
  @@schema("ctrl-Y")
}
model User {
  user_id String  @id @default(uuid())
  email        String   @db.Text @unique
  password     String   @db.Text
  keyword      String?   @db.Text
  cutoff_day   Boolean?
  pay_day      Boolean?
  registered_at DateTime  @default(now())
  updated_at    DateTime @default(now())

  children  Child[]
  tasks     Task[]

  @@map("parent_acc")
  @@schema("ctrl-Y")
}

model Child {
  user_id String @id @default(uuid())
  parent_id String  @db.Uuid
  c_name String @db.Text
  icon_path String? @db.Text
  registered_at DateTime @default(now())
  updated_at DateTime  @updatedAt
  
  parent User @relation(fields: [parent_id], references: [user_id], onDelete: Cascade)
  childTasks ChildTask[]

  @@map("child_acc")
  @@schema("ctrl-Y")
}

model ChildTask {
  user_id String @unique
  task_id Int    @unique

  child   Child @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  task    Task  @relation(fields: [task_id], references: [task_id], onDelete: Cascade)

  @@id([user_id, task_id])
  @@map("child_tasks")
  @@schema("ctrl-Y")
}

model Pay {
  user_id String
  inserted_month DateTime @default(now())
  number Int @db.SmallInt
  reward Int @db.SmallInt

  @@id([user_id, inserted_month])
  @@map("payroll")
  @@schema("ctrl-Y")
}

model TaskStatus {
  s_id Int   @id  @db.SmallInt
  s_name String @db.Text

  tasks Task[]

  @@map("task_status")
  @@schema("ctrl-Y")
}